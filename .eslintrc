{
	"env": {
		"browser": true,
		"es2020": true
	},
	"plugins": [
		"@typescript-eslint",
		"react",
		"standard",
		"import",
		"simple-import-sort",
		"unused-imports",
		"eslint-plugin-prettier"
	],
	"extends": [
		"prettier",
		"airbnb",
		"airbnb/hooks",
		"eslint:recommended",
		"plugin:prettier/recommended",
		"plugin:react/recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:import/errors",
		"plugin:import/warnings",
		"plugin:import/typescript",
		"plugin:react-hooks/recommended"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "tsconfig.json",
		"tsconfigRootDir": "."
	},
	"rules": {
		"linebreak-style": "off",

		"unused-imports/no-unused-imports": "error",
		"unused-imports/no-unused-vars": [
			"warn",
			{ "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
		],
		"prettier/prettier": ["warn", {
			"arrowParens": "always",
			"bracketSpacing": true,
			"endOfLine": "auto",
			"jsxBracketSameLine": false,
			"jsxSingleQuote": false,
			"parser": "typescript",
			"printWidth": 120,
			"proseWrap": "preserve",
			"semi": true,
			"singleQuote": false,
			"tabWidth": 4,
			"trailingComma": "all",
			"useTabs": false,
			"bracketSameLine": false
		}],

		"no-underscore-dangle": "off",
		"no-debugger": "error",
		"prefer-const": "error",
		"camelcase": "off",
		"no-use-before-define": "off",
		"no-console": ["warn", { "allow": ["error"] }],
		"no-unused-expressions": "error",
		"no-void": ["error", { "allowAsStatement": true }],
		"no-nested-ternary": "off",
		"brace-style": "off",
		"prefer-promise-reject-errors": "off",
		"react/prop-types": "off",
		"react/display-name": "off",
		"react/static-property-placement": "off",
		"react/state-in-constructor": "off",
		"react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
		"react/jsx-one-expression-per-line": "off",
		"react/jsx-indent": "off",
		"react/jsx-indent-props": ["error", 4],
		"react/jsx-props-no-spreading": "off",
		"react/jsx-curly-newline": "off",
		"react/destructuring-assignment": "off",
		"react/sort-comp": "off",
		"react/no-array-index-key": "off",
		"react/require-default-props": "off",
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "error",
		"react/jsx-uses-react": "off",
		"react/react-in-jsx-scope": "off",
		"jsx-a11y/no-static-element-interactions": "off",
		"jsx-a11y/click-events-have-key-events": "off",
		"jsx-a11y/no-noninteractive-tabindex": "off",
		"jsx-a11y/label-has-associated-control": "off",
		"jsx-a11y/no-noninteractive-element-interactions": "off",
		"jsx-a11y/iframe-has-title": "off",
		"jsx-a11y/anchor-is-valid": [
			"error",
			{
				"components": ["Link"],
				"specialLink": ["hrefLeft", "hrefRight"],
				"aspects": ["invalidHref", "preferButton"]
			}
		],
		"newline-before-return": "error",
		"spaced-comment": ["error", "always", { "markers": ["/"] }],
		"comma-dangle": ["error", "always-multiline"],
		"arrow-parens": ["error", "always"],
		"no-restricted-syntax": "off",
		"no-restricted-exports": "off",
		"space-before-function-paren": [
			"error",
			{
				"anonymous": "never",
				"named": "never",
				"asyncArrow": "always"
			}
		],
		"react/function-component-definition": "off",
		"indent": "off",
		"max-len": [
			"error",
			120,
			2,
			{
				"ignoreUrls": true,
				"ignoreComments": false,
				"ignoreRegExpLiterals": true,
				"ignoreStrings": true,
				"ignoreTemplateLiterals": true
			}
		],
		"padding-line-between-statements": [
			"error",
			{ "blankLine": "always", "prev": "*", "next": "return" },
			{ "blankLine": "always", "prev": "*", "next": "if" }
		],
		"implicit-arrow-linebreak": "off",
		"no-plusplus": "off",
		"max-classes-per-file": "off",
		"operator-linebreak": "off",
		"object-curly-newline": "off",
		"class-methods-use-this": "off",
		"no-confusing-arrow": "off",
		"function-paren-newline": "off",
		"no-param-reassign": "off",
		"no-shadow": "off",
		"consistent-return": "off",
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/no-empty-function": "off",
		"@typescript-eslint/no-empty-interface": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/no-unused-vars": "error",
		"@typescript-eslint/ban-ts-comment": "error",
		"@typescript-eslint/no-shadow": "off",
		"@typescript-eslint/no-misused-promises": [
			"error",
			{
				"checksVoidReturn": false
			}
		],
		"@typescript-eslint/consistent-type-imports": "error",
		"import/no-relative-parent-imports": "off",
		"import/no-duplicates": "error",
		"import/no-cycle": "error",
		"import/no-unresolved": "off",
		"import/no-named-as-default-member": "off",
		"import/prefer-default-export": "off",
		"import/extensions": "off",
		"import/no-extraneous-dependencies": ["off"],
		"simple-import-sort/exports": "error",
		"simple-import-sort/imports": [
			"error",
			{
				"groups": [
					// Node.js builtins. You could also generate this regex if you use a `.js` config.
					// For example: `^(${require("module").builtinModules.join("|")})(/|$)`
					[
						"^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
					],
					// Packages. `react` related packages come first.
					["^react", "^@?\\w"],
					// Internal packages.
					["^(@|@company|@ui|components|utils|config|vendored-lib)(/.*|$)"],
					// Side effect imports.
					["^\\u0000"],
					// Parent imports. Put `..` last.
					["^\\.\\.(?!/?$)", "^\\.\\./?$"],
					// Other relative imports. Put same-folder imports and `.` last.
					["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
					// Style imports.
					["^.+\\.s?css$"]
				]
			}
		],

		"react/jsx-wrap-multilines": "off",
		"no-spaced-func": "off"
	},
	"overrides": [],
	"settings": {
		"react": {
			"version": "detect"
		}
	}
}